


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             oscode, CODE, READONLY
    2 00000000                 THUMB
    3 00000000         
    4 00000000         ;Includes definitions required for OS_InitContextSwitche
                       r
    5 00000000                 INCLUDE          my_Constants.s
    1 00000000                 AREA             My_Constants, CODE, READONLY
    2 00000000                 THUMB
    3 00000000         
    4 00000000         ;defining addresses here for practice
    5 00000000         
    6 00000000         ;general base addresses
    7 00000000 40059000 
                       AHB_PORTB
                               EQU              0x40059000
    8 00000000 40058000 
                       AHB_PORTA
                               EQU              0x40058000
    9 00000000 400FE000 
                       SYS_CONTROL
                               EQU              0x400FE000
   10 00000000 E000E000 
                       SYS_PERIPH
                               EQU              0xE000E000
   11 00000000 40030000 
                       TIMER16_0
                               EQU              0x40030000
   12 00000000 40034000 
                       TIMER16_4
                               EQU              0x40034000
   13 00000000 4000C000 
                       UART0   EQU              0x4000C000
   14 00000000 4000D000 
                       UART1   EQU              0x4000D000
   15 00000000         
   16 00000000         ;offsets
   17 00000000         ;RCGC Run-time offsets
   18 00000000 00000608 
                       RCGCGPIO
                               EQU              0x608
   19 00000000 00000604 
                       RCGCTIMER
                               EQU              0x604
   20 00000000 00000618 
                       RCGCUART
                               EQU              0x618
   21 00000000         ;GPIO offsets
   22 00000000 0000006C 
                       GPIOHBCTL
                               EQU              0x06C
   23 00000000 0000052C 
                       GPIOCTL EQU              0x52C
   24 00000000 00000400 
                       GPIODIR EQU              0X400
   25 00000000 00000420 
                       GPIOAFSEL
                               EQU              0X420
   26 00000000 00000500 
                       GPIODR2R



ARM Macro Assembler    Page 2 


                               EQU              0X500
   27 00000000 00000510 
                       GPIOPUR EQU              0X510
   28 00000000 0000051C 
                       GPIODEN EQU              0X51C
   29 00000000 0000052C 
                       GPIOPCTL
                               EQU              0x52C
   30 00000000 00000080 
                       GPIODATAPB5
                               EQU              0x080       ; 0x3FC
   31 00000000         ;SysTick offsets
   32 00000000 00000010 
                       STCTRL  EQU              0X010
   33 00000000 00000014 
                       STRELOAD
                               EQU              0X014
   34 00000000 00000018 
                       STCURRENT
                               EQU              0X018
   35 00000000 00000D20 
                       SYSPRI3 EQU              0XD20
   36 00000000         ;System Clock offsets
   37 00000000 00000060 
                       RCC     EQU              0X060
   38 00000000         ;NVIC offsets
   39 00000000 00000100 
                       NVIC_ENn
                               EQU              0x100
   40 00000000 00000180 
                       NVIC_DISn
                               EQU              0x180
   41 00000000 00000440 
                       NVIC_PRIn
                               EQU              0x440
   42 00000000         ;Timer offsets
   43 00000000 0000000C 
                       GPTMCTL EQU              0x00C
   44 00000000 00000000 
                       GPTMCFG EQU              0x000
   45 00000000 00000004 
                       GPTMTAMR
                               EQU              0x004
   46 00000000 00000008 
                       GPTMTBMR
                               EQU              0x008
   47 00000000 00000028 
                       GPTMTAILR
                               EQU              0x028
   48 00000000 0000002C 
                       GPTMTBILR
                               EQU              0x02C
   49 00000000 00000038 
                       GPTMTAPR
                               EQU              0x038
   50 00000000 0000003C 
                       GPTMTBPR
                               EQU              0x03C
   51 00000000 00000018 



ARM Macro Assembler    Page 3 


                       GPTMIMR EQU              0x018
   52 00000000 0000001C 
                       GPTMRIS EQU              0x01C
   53 00000000 00000024 
                       GPTMICR EQU              0x024
   54 00000000 00000050 
                       GPTMTAV EQU              0X050
   55 00000000 00000054 
                       GPTMTBV EQU              0x054
   56 00000000 00000048 
                       GPTMTAR EQU              0x048
   57 00000000 0000004C 
                       GPTMTBR EQU              0x04C
   58 00000000 00000020 
                       GPTMMIS EQU              0x020
   59 00000000         ;UART offsets
   60 00000000 00000FC8 
                       UARTCC  EQU              0xFC8
   61 00000000 00000030 
                       UARTCTL EQU              0x030
   62 00000000 00000024 
                       UARTIBRD
                               EQU              0x024
   63 00000000 00000028 
                       UARTFBRD
                               EQU              0x028
   64 00000000 0000002C 
                       UARTLCRH
                               EQU              0x02C
   65 00000000 00000018 
                       UARTFR  EQU              0x018
   66 00000000 00000004 
                       UARTRSR EQU              0x004
   67 00000000 00000034 
                       UARTIFLS
                               EQU              0x034
   68 00000000 0000003C 
                       UARTRIS EQU              0x03C
   69 00000000 00000038 
                       UARTIM  EQU              0x038
   70 00000000 00000040 
                       UARTMIS EQU              0x040
   71 00000000 00000044 
                       UARTICR EQU              0x044
   72 00000000 00000000 
                       UARTDR  EQU              0x000
   73 00000000         
   74 00000000         ;FIFO constants
   75 00000000         ;ALIGN 2
   76 00000000 00000010 
                       SIZE    EQU              16
   77 00000000 00000001 
                       SUCCESS EQU              1
   78 00000000 00000000 
                       FAIL    EQU              0
   79 00000000         
   80 00000000         ;GPIODATA Toggle bits
   81 00000000 00000020 
                       GPIOP5  EQU              0x20



ARM Macro Assembler    Page 4 


   82 00000000         
   83 00000000                 END
    6 00000000         
    7 00000000                 IMPORT           tcbsArray   ;import array
    8 00000000                 IMPORT           RunThread   ;import pointer
    9 00000000         
   10 00000000         ;This function sets up the systemclock with PIOSC 16MHz
   11 00000000         ;Change this if you wish to use a different clock, with 
                       divisor, etc
   12 00000000         OS_InitClock
                               PROC
   13 00000000                 EXPORT           OS_InitClock
   14 00000000         
   15 00000000         ;RCC manipulations here to set base clocks
   16 00000000 B510            PUSH             {r4, LR}
   17 00000002         
   18 00000002 4836            LDR              r0, =SYS_CONTROL
   19 00000004 6E01            LDR              r1,[r0, #RCC]
   20 00000006         
   21 00000006         ;Set OSCRC. Select PIOSC
   22 00000006         ;AND r1, r1, #(3<<4) ;clear bits 5 and 4. Change to BIC
   23 00000006 F36F 1105       BFC              r1, #4, #2
   24 0000000A F041 0110       ORR              r1, r1, #(1<<4) ;OSCRC to set P
                                                            IOSC as System cloc
                                                            k
   25 0000000E         
   26 0000000E         ;Set BYPASS. 
   27 0000000E         ;AND r1, r1, #(0<<11) ;clear bit 11
   28 0000000E F36F 21CB       BFC              r1, #11, #1
   29 00000012 F441 6100       ORR              r1, r1, #(1<<11) ;BYPASS to set
                                                             system clock to OS
                                                            C
   30 00000016         
   31 00000016         ;Set USESYSDIV. Selects no division
   32 00000016         ;AND r1, r1, #(0<<22) ;clear it 22
   33 00000016 F36F 5196       BFC              r1, #22, #1
   34 0000001A F041 0100       ORR              r1, r1, #(0<<22) ;No division f
                                                            or system clock. Th
                                                            is line is for clar
                                                            ity
   35 0000001E         
   36 0000001E         
   37 0000001E         
   38 0000001E 6601            STR              r1,[r0, #RCC]
   39 00000020         
   40 00000020 E8BD 4010       POP              {r4, LR}
   41 00000024         
   42 00000024                 ENDP
   43 00000024         
   44 00000024         ;This function initiates the stack by subtracting sp by 
                       the total number 
   45 00000024         ;of words needed to fill in all registers. The stack loc
                       ation for PC is
   46 00000024         ;stored with the threads task location. xPSR not needed.
                       
   47 00000024         ;r0 = numThreads (THREADSIZE)
   48 00000024         OS_InitStack
                               PROC
   49 00000024                 EXPORT           OS_InitStack



ARM Macro Assembler    Page 5 


   50 00000024         
   51 00000024 B510            PUSH             {r4, LR}
   52 00000026         
   53 00000026 492E            LDR              r1,=tcbsArray ;Loading the task
                                                             from the tcbsArray
                                                            
   54 00000028         
   55 00000028 F04F 0400       MOV              r4, #0
   56 0000002C 42A0    loop    CMP              r0, r4
   57 0000002E D008            BEQ              endloop
   58 00000030 B082            SUB              sp, #8      ;This is where task
                                                             will be saved, in 
                                                            PC slot of stack
   59 00000032         
   60 00000032         ;Store task from TCB to PC slot in stack
   61 00000032 F8D1 D008       LDR              sp, [r1,#8] ;offset of 8 to rea
                                                            ch task in TCB
   62 00000036 F101 0120       ADD              r1, #32     ; assuming each dat
                                                            a in tcb is 32 bits
                                                            , total is 32 words
                                                             in RAM for next tc
                                                            b. tcbsArray[i], i 
                                                            = 1, 2, 3, ...
   63 0000003A         
   64 0000003A B08E            SUB              sp, #56
   65 0000003C F1A4 0401       SUB              r4, #1
   66 00000040 E7F4            B                loop
   67 00000042 BD10    endloop POP              {r4, PC}
   68 00000044         
   69 00000044                 ENDP
   70 00000044         
   71 00000044         ;This function initiates SysTick, the mechanism used to 
                       perform the context switch.
   72 00000044         ;It sets the base frequency to 1ms.
   73 00000044         OS_InitContextSwitcher
                               PROC
   74 00000044                 EXPORT           OS_InitContextSwitcher
   75 00000044         
   76 00000044         ;Push LR onto stack first
   77 00000044 B510            PUSH             {r4, LR}
   78 00000046         
   79 00000046         ;RCC used to etsablish base clock
   80 00000046         
   81 00000046         ;Clear ENABLE bit. STCTRL
   82 00000046 F04F 20E0       LDR              r0, =SYS_PERIPH
   83 0000004A 6901            LDR              r1, [r0,#STCTRL]
   84 0000004C F001 0100       AND              r1, r1, #0  ;Clear bit 0
   85 00000050 6101            STR              r1, [r0, #STCTRL]
   86 00000052         
   87 00000052         ;Set reload value. STRELOAD
   88 00000052 F04F 20E0       LDR              r0, =SYS_PERIPH
   89 00000056 6941            LDR              r1, [r0,#STRELOAD]
   90 00000058 F041 0120       ORR              r1, r1, #(1<<5) ;23) ;Set inter
                                                            rupt period here
   91 0000005C 6141            STR              r1, [r0,#STRELOAD]
   92 0000005E         
   93 0000005E         ;Clear timer and interrupt flag. STCURRENT
   94 0000005E F04F 20E0       LDR              r0, =SYS_PERIPH
   95 00000062 6981            LDR              r1, [r0,#STCURRENT]



ARM Macro Assembler    Page 6 


   96 00000064 F041 0101       ORR              r1, r1, #1  ;Write any value to
                                                             reset
   97 00000068 6181            STR              r1, [r0,#STCURRENT]
   98 0000006A         ;LDR r1, [r0,#STCURRENT]
   99 0000006A         
  100 0000006A         
  101 0000006A         ;Set CLK_SRC bit to use the system clock (look at InitCl
                       ock). STCTRL
  102 0000006A F04F 20E0       LDR              r0, =SYS_PERIPH
  103 0000006E 6901            LDR              r1, [r0,#STCTRL]
  104 00000070 F36F 0182       BFC              r1, #2, #1
  105 00000074 F041 0104       ORR              r1, r1, #(1<<2) ;bit 2
  106 00000078 6101            STR              r1, [r0,#STCTRL]
  107 0000007A         
  108 0000007A         ;Set INTEN bit to enable interrupts. STCTRL
  109 0000007A F04F 20E0       LDR              r0, =SYS_PERIPH
  110 0000007E 6901            LDR              r1, [r0,#STCTRL]
  111 00000080 F041 0102       ORR              r1, r1, #(1<<1) ;bit 1
  112 00000084 6101            STR              r1, [r0,#STCTRL]
  113 00000086         
  114 00000086         ;Set TICK priority field. SYSPRI3
  115 00000086 F04F 20E0       LDR              r0, =SYS_PERIPH
  116 0000008A F8D0 1D20       LDR              r1, [r0,#SYSPRI3]
  117 0000008E F041 5100       ORR              r1, r1, #(1<<29) ;priority 1. T
                                                            ICK begins at bit 2
                                                            9
  118 00000092 F8C0 1D20       STR              r1, [r0,#SYSPRI3]
  119 00000096         
  120 00000096         ;Set ENABLE bit to turn SysTick on again. STCTRL
  121 00000096 F04F 20E0       LDR              r0, =SYS_PERIPH
  122 0000009A 6901            LDR              r1, [r0,#STCTRL]
  123 0000009C F041 0101       ORR              r1, r1, #1  ;bit 0
  124 000000A0 6101            STR              r1, [r0,#STCTRL]
  125 000000A2         
  126 000000A2         
  127 000000A2         ;Pop LR and return to __main
  128 000000A2         ;POP {LR}
  129 000000A2 BD10            POP              {r4, PC}
  130 000000A4 4770            BX               LR
  131 000000A6         
  132 000000A6                 ENDP
  133 000000A6         
  134 000000A6         ;This function starts the RTOS by loading the context of
                        the first
  135 000000A6         ;thread
  136 000000A6         OS_Launch
                               PROC
  137 000000A6                 EXPORT           OS_Launch
  138 000000A6         
  139 000000A6         ;Get SP to the first tcb and load into SP register
  140 000000A6 480F            LDR              r0, =RunThread
  141 000000A8 6801            LDR              r1, [r0]
  142 000000AA F8D1 D000       LDR              sp, [r1]
  143 000000AE         
  144 000000AE         ;Pop the context
  145 000000AE E8BD 0FF0       POP              {r4-r11}
  146 000000B2 BC0F            POP              {r0-r3}
  147 000000B4 F85D CB04       POP              {r12}
  148 000000B8 F85D EB04       POP              {r14}



ARM Macro Assembler    Page 7 


  149 000000BC BD00            POP              {r15}
  150 000000BE         
  151 000000BE         ;Ignore xPSR (r"16", right after PC r15)
  152 000000BE B001            ADD              sp, sp, #4
  153 000000C0         
  154 000000C0         ;Add CPSIE I as another function
  155 000000C0 B662            CPSIE            I
  156 000000C2 4770            BX               LR
  157 000000C4         
  158 000000C4                 ENDP
  159 000000C4         
  160 000000C4         
  161 000000C4         ;This function is used to disable interrupts. Use it for
                        large critical sections without
  162 000000C4         ;a shared resource
  163 000000C4         OS_DisableInterrupts
                               PROC
  164 000000C4                 EXPORT           OS_DisableInterrupts
  165 000000C4         
  166 000000C4 B672            CPSID            I
  167 000000C6         
  168 000000C6 4770            BX               LR
  169 000000C8         
  170 000000C8                 ENDP
  171 000000C8         
  172 000000C8         ;This function is used to enable interrupts after disabl
                       ing them. Use this when you use 
  173 000000C8         ;OS_DisableInterrupts
  174 000000C8         OS_EnableInterrupts
                               PROC
  175 000000C8                 EXPORT           OS_EnableInterrupts
  176 000000C8         
  177 000000C8 B662            CPSIE            I
  178 000000CA         
  179 000000CA 4770            BX               LR
  180 000000CC         
  181 000000CC                 ENDP
  182 000000CC         
  183 000000CC         ;This function is used to disable interrupts. Use this f
                       or critical sections that
  184 000000CC         ;share resources
  185 000000CC         ;r0 (return value) = PRIMASK (reenables interrupts later
                       )
  186 000000CC         OS_CriticalSectionS
                               PROC
  187 000000CC                 EXPORT           OS_CriticalSectionS
  188 000000CC         
  189 000000CC F3EF 8010       MRS              r0, PRIMASK
  190 000000D0 B672            CPSID            I
  191 000000D2         
  192 000000D2 4770            BX               LR
  193 000000D4         
  194 000000D4                 ENDP
  195 000000D4         
  196 000000D4         ;This function is used to enable interrpts. Use it after
                        using OS_CriticalSection
  197 000000D4         ;r0 (input) = PRIMASK value from OS_CriticalSectionS
  198 000000D4         OS_CriticalSectionE
                               PROC



ARM Macro Assembler    Page 8 


  199 000000D4                 EXPORT           OS_CriticalSectionE
  200 000000D4         
  201 000000D4 F380 8810       MSR              PRIMASK, r0
  202 000000D8         
  203 000000D8 4770            BX               LR
  204 000000DA         
  205 000000DA         
  206 000000DA                 END
              00 00 400FE000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\os_1.d -o.\objects\os_1.o -IC:\ti\TivaWare_C_Series-2
.1.4.178\examples\boards\my_projects\TM4C123GX-OS-RR\RTE -IC:\Keil_v5\ARM\PACK\
Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CMSIS\Include --pre
define="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 521" --predefine="TM
4C123GH6PM SETA 1" --list=.\listings\os.lst OS.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

oscode 00000000

Symbol: oscode
   Definitions
      At line 1 in file OS.s
   Uses
      None
Comment: oscode unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

My_Constants 00000000

Symbol: My_Constants
   Definitions
      At line 1 in file my_Constants.s
   Uses
      None
Comment: My_Constants unused
OS_CriticalSectionE 000000D4

Symbol: OS_CriticalSectionE
   Definitions
      At line 198 in file OS.s
   Uses
      At line 199 in file OS.s
Comment: OS_CriticalSectionE used once
OS_CriticalSectionS 000000CC

Symbol: OS_CriticalSectionS
   Definitions
      At line 186 in file OS.s
   Uses
      At line 187 in file OS.s
Comment: OS_CriticalSectionS used once
OS_DisableInterrupts 000000C4

Symbol: OS_DisableInterrupts
   Definitions
      At line 163 in file OS.s
   Uses
      At line 164 in file OS.s
Comment: OS_DisableInterrupts used once
OS_EnableInterrupts 000000C8

Symbol: OS_EnableInterrupts
   Definitions
      At line 174 in file OS.s
   Uses
      At line 175 in file OS.s
Comment: OS_EnableInterrupts used once
OS_InitClock 00000000

Symbol: OS_InitClock
   Definitions
      At line 12 in file OS.s
   Uses
      At line 13 in file OS.s
Comment: OS_InitClock used once
OS_InitContextSwitcher 00000044

Symbol: OS_InitContextSwitcher
   Definitions
      At line 73 in file OS.s
   Uses
      At line 74 in file OS.s
Comment: OS_InitContextSwitcher used once
OS_InitStack 00000024

Symbol: OS_InitStack



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 48 in file OS.s
   Uses
      At line 49 in file OS.s
Comment: OS_InitStack used once
OS_Launch 000000A6

Symbol: OS_Launch
   Definitions
      At line 136 in file OS.s
   Uses
      At line 137 in file OS.s
Comment: OS_Launch used once
endloop 00000042

Symbol: endloop
   Definitions
      At line 67 in file OS.s
   Uses
      At line 57 in file OS.s
Comment: endloop used once
loop 0000002C

Symbol: loop
   Definitions
      At line 56 in file OS.s
   Uses
      At line 66 in file OS.s
Comment: loop used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

AHB_PORTA 40058000

Symbol: AHB_PORTA
   Definitions
      At line 8 in file my_Constants.s
   Uses
      None
Comment: AHB_PORTA unused
AHB_PORTB 40059000

Symbol: AHB_PORTB
   Definitions
      At line 7 in file my_Constants.s
   Uses
      None
Comment: AHB_PORTB unused
FAIL 00000000

Symbol: FAIL
   Definitions
      At line 78 in file my_Constants.s
   Uses
      None
Comment: FAIL unused
GPIOAFSEL 00000420

Symbol: GPIOAFSEL
   Definitions
      At line 25 in file my_Constants.s
   Uses
      None
Comment: GPIOAFSEL unused
GPIOCTL 0000052C

Symbol: GPIOCTL
   Definitions
      At line 23 in file my_Constants.s
   Uses
      None
Comment: GPIOCTL unused
GPIODATAPB5 00000080

Symbol: GPIODATAPB5
   Definitions
      At line 30 in file my_Constants.s
   Uses
      None
Comment: GPIODATAPB5 unused
GPIODEN 0000051C

Symbol: GPIODEN
   Definitions
      At line 28 in file my_Constants.s
   Uses
      None
Comment: GPIODEN unused
GPIODIR 00000400

Symbol: GPIODIR



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 24 in file my_Constants.s
   Uses
      None
Comment: GPIODIR unused
GPIODR2R 00000500

Symbol: GPIODR2R
   Definitions
      At line 26 in file my_Constants.s
   Uses
      None
Comment: GPIODR2R unused
GPIOHBCTL 0000006C

Symbol: GPIOHBCTL
   Definitions
      At line 22 in file my_Constants.s
   Uses
      None
Comment: GPIOHBCTL unused
GPIOP5 00000020

Symbol: GPIOP5
   Definitions
      At line 81 in file my_Constants.s
   Uses
      None
Comment: GPIOP5 unused
GPIOPCTL 0000052C

Symbol: GPIOPCTL
   Definitions
      At line 29 in file my_Constants.s
   Uses
      None
Comment: GPIOPCTL unused
GPIOPUR 00000510

Symbol: GPIOPUR
   Definitions
      At line 27 in file my_Constants.s
   Uses
      None
Comment: GPIOPUR unused
GPTMCFG 00000000

Symbol: GPTMCFG
   Definitions
      At line 44 in file my_Constants.s
   Uses
      None
Comment: GPTMCFG unused
GPTMCTL 0000000C

Symbol: GPTMCTL
   Definitions
      At line 43 in file my_Constants.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: GPTMCTL unused
GPTMICR 00000024

Symbol: GPTMICR
   Definitions
      At line 53 in file my_Constants.s
   Uses
      None
Comment: GPTMICR unused
GPTMIMR 00000018

Symbol: GPTMIMR
   Definitions
      At line 51 in file my_Constants.s
   Uses
      None
Comment: GPTMIMR unused
GPTMMIS 00000020

Symbol: GPTMMIS
   Definitions
      At line 58 in file my_Constants.s
   Uses
      None
Comment: GPTMMIS unused
GPTMRIS 0000001C

Symbol: GPTMRIS
   Definitions
      At line 52 in file my_Constants.s
   Uses
      None
Comment: GPTMRIS unused
GPTMTAILR 00000028

Symbol: GPTMTAILR
   Definitions
      At line 47 in file my_Constants.s
   Uses
      None
Comment: GPTMTAILR unused
GPTMTAMR 00000004

Symbol: GPTMTAMR
   Definitions
      At line 45 in file my_Constants.s
   Uses
      None
Comment: GPTMTAMR unused
GPTMTAPR 00000038

Symbol: GPTMTAPR
   Definitions
      At line 49 in file my_Constants.s
   Uses
      None
Comment: GPTMTAPR unused
GPTMTAR 00000048



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: GPTMTAR
   Definitions
      At line 56 in file my_Constants.s
   Uses
      None
Comment: GPTMTAR unused
GPTMTAV 00000050

Symbol: GPTMTAV
   Definitions
      At line 54 in file my_Constants.s
   Uses
      None
Comment: GPTMTAV unused
GPTMTBILR 0000002C

Symbol: GPTMTBILR
   Definitions
      At line 48 in file my_Constants.s
   Uses
      None
Comment: GPTMTBILR unused
GPTMTBMR 00000008

Symbol: GPTMTBMR
   Definitions
      At line 46 in file my_Constants.s
   Uses
      None
Comment: GPTMTBMR unused
GPTMTBPR 0000003C

Symbol: GPTMTBPR
   Definitions
      At line 50 in file my_Constants.s
   Uses
      None
Comment: GPTMTBPR unused
GPTMTBR 0000004C

Symbol: GPTMTBR
   Definitions
      At line 57 in file my_Constants.s
   Uses
      None
Comment: GPTMTBR unused
GPTMTBV 00000054

Symbol: GPTMTBV
   Definitions
      At line 55 in file my_Constants.s
   Uses
      None
Comment: GPTMTBV unused
NVIC_DISn 00000180

Symbol: NVIC_DISn
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 40 in file my_Constants.s
   Uses
      None
Comment: NVIC_DISn unused
NVIC_ENn 00000100

Symbol: NVIC_ENn
   Definitions
      At line 39 in file my_Constants.s
   Uses
      None
Comment: NVIC_ENn unused
NVIC_PRIn 00000440

Symbol: NVIC_PRIn
   Definitions
      At line 41 in file my_Constants.s
   Uses
      None
Comment: NVIC_PRIn unused
RCC 00000060

Symbol: RCC
   Definitions
      At line 37 in file my_Constants.s
   Uses
      At line 19 in file OS.s
      At line 38 in file OS.s

RCGCGPIO 00000608

Symbol: RCGCGPIO
   Definitions
      At line 18 in file my_Constants.s
   Uses
      None
Comment: RCGCGPIO unused
RCGCTIMER 00000604

Symbol: RCGCTIMER
   Definitions
      At line 19 in file my_Constants.s
   Uses
      None
Comment: RCGCTIMER unused
RCGCUART 00000618

Symbol: RCGCUART
   Definitions
      At line 20 in file my_Constants.s
   Uses
      None
Comment: RCGCUART unused
SIZE 00000010

Symbol: SIZE
   Definitions
      At line 76 in file my_Constants.s
   Uses



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

      None
Comment: SIZE unused
STCTRL 00000010

Symbol: STCTRL
   Definitions
      At line 32 in file my_Constants.s
   Uses
      At line 83 in file OS.s
      At line 85 in file OS.s
      At line 103 in file OS.s
      At line 106 in file OS.s
      At line 110 in file OS.s
      At line 112 in file OS.s
      At line 122 in file OS.s
      At line 124 in file OS.s

STCURRENT 00000018

Symbol: STCURRENT
   Definitions
      At line 34 in file my_Constants.s
   Uses
      At line 95 in file OS.s
      At line 97 in file OS.s

STRELOAD 00000014

Symbol: STRELOAD
   Definitions
      At line 33 in file my_Constants.s
   Uses
      At line 89 in file OS.s
      At line 91 in file OS.s

SUCCESS 00000001

Symbol: SUCCESS
   Definitions
      At line 77 in file my_Constants.s
   Uses
      None
Comment: SUCCESS unused
SYSPRI3 00000D20

Symbol: SYSPRI3
   Definitions
      At line 35 in file my_Constants.s
   Uses
      At line 116 in file OS.s
      At line 118 in file OS.s

SYS_CONTROL 400FE000

Symbol: SYS_CONTROL
   Definitions
      At line 9 in file my_Constants.s
   Uses
      At line 18 in file OS.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

Comment: SYS_CONTROL used once
SYS_PERIPH E000E000

Symbol: SYS_PERIPH
   Definitions
      At line 10 in file my_Constants.s
   Uses
      At line 82 in file OS.s
      At line 88 in file OS.s
      At line 94 in file OS.s
      At line 102 in file OS.s
      At line 109 in file OS.s
      At line 115 in file OS.s
      At line 121 in file OS.s

TIMER16_0 40030000

Symbol: TIMER16_0
   Definitions
      At line 11 in file my_Constants.s
   Uses
      None
Comment: TIMER16_0 unused
TIMER16_4 40034000

Symbol: TIMER16_4
   Definitions
      At line 12 in file my_Constants.s
   Uses
      None
Comment: TIMER16_4 unused
UART0 4000C000

Symbol: UART0
   Definitions
      At line 13 in file my_Constants.s
   Uses
      None
Comment: UART0 unused
UART1 4000D000

Symbol: UART1
   Definitions
      At line 14 in file my_Constants.s
   Uses
      None
Comment: UART1 unused
UARTCC 00000FC8

Symbol: UARTCC
   Definitions
      At line 60 in file my_Constants.s
   Uses
      None
Comment: UARTCC unused
UARTCTL 00000030

Symbol: UARTCTL
   Definitions



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      At line 61 in file my_Constants.s
   Uses
      None
Comment: UARTCTL unused
UARTDR 00000000

Symbol: UARTDR
   Definitions
      At line 72 in file my_Constants.s
   Uses
      None
Comment: UARTDR unused
UARTFBRD 00000028

Symbol: UARTFBRD
   Definitions
      At line 63 in file my_Constants.s
   Uses
      None
Comment: UARTFBRD unused
UARTFR 00000018

Symbol: UARTFR
   Definitions
      At line 65 in file my_Constants.s
   Uses
      None
Comment: UARTFR unused
UARTIBRD 00000024

Symbol: UARTIBRD
   Definitions
      At line 62 in file my_Constants.s
   Uses
      None
Comment: UARTIBRD unused
UARTICR 00000044

Symbol: UARTICR
   Definitions
      At line 71 in file my_Constants.s
   Uses
      None
Comment: UARTICR unused
UARTIFLS 00000034

Symbol: UARTIFLS
   Definitions
      At line 67 in file my_Constants.s
   Uses
      None
Comment: UARTIFLS unused
UARTIM 00000038

Symbol: UARTIM
   Definitions
      At line 69 in file my_Constants.s
   Uses
      None



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

Comment: UARTIM unused
UARTLCRH 0000002C

Symbol: UARTLCRH
   Definitions
      At line 64 in file my_Constants.s
   Uses
      None
Comment: UARTLCRH unused
UARTMIS 00000040

Symbol: UARTMIS
   Definitions
      At line 70 in file my_Constants.s
   Uses
      None
Comment: UARTMIS unused
UARTRIS 0000003C

Symbol: UARTRIS
   Definitions
      At line 68 in file my_Constants.s
   Uses
      None
Comment: UARTRIS unused
UARTRSR 00000004

Symbol: UARTRSR
   Definitions
      At line 66 in file my_Constants.s
   Uses
      None
Comment: UARTRSR unused
61 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

RunThread 00000000

Symbol: RunThread
   Definitions
      At line 8 in file OS.s
   Uses
      At line 140 in file OS.s
Comment: RunThread used once
tcbsArray 00000000

Symbol: tcbsArray
   Definitions
      At line 7 in file OS.s
   Uses
      At line 53 in file OS.s
Comment: tcbsArray used once
2 symbols
411 symbols in table
